// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MuseumTickets.Api.Data;

#nullable disable

namespace MuseumTickets.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250910140920_InitAll")]
    partial class InitAll
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("MuseumTickets.Api.Domain.Exhibition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("MuseumId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MuseumId");

                    b.ToTable("Exhibitions");
                });

            modelBuilder.Entity("MuseumTickets.Api.Domain.Museum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Museums");
                });

            modelBuilder.Entity("MuseumTickets.Api.Domain.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BuyerEmail")
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.Property<string>("BuyerName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.Property<int>("ExhibitionId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("OrderedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TicketTypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ExhibitionId");

                    b.HasIndex("TicketTypeId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("MuseumTickets.Api.Domain.TicketType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("MuseumId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("MuseumId");

                    b.ToTable("TicketTypes");
                });

            modelBuilder.Entity("MuseumTickets.Api.Domain.Exhibition", b =>
                {
                    b.HasOne("MuseumTickets.Api.Domain.Museum", "Museum")
                        .WithMany("Exhibitions")
                        .HasForeignKey("MuseumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Museum");
                });

            modelBuilder.Entity("MuseumTickets.Api.Domain.Order", b =>
                {
                    b.HasOne("MuseumTickets.Api.Domain.Exhibition", "Exhibition")
                        .WithMany()
                        .HasForeignKey("ExhibitionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MuseumTickets.Api.Domain.TicketType", "TicketType")
                        .WithMany("Orders")
                        .HasForeignKey("TicketTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Exhibition");

                    b.Navigation("TicketType");
                });

            modelBuilder.Entity("MuseumTickets.Api.Domain.TicketType", b =>
                {
                    b.HasOne("MuseumTickets.Api.Domain.Museum", "Museum")
                        .WithMany()
                        .HasForeignKey("MuseumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Museum");
                });

            modelBuilder.Entity("MuseumTickets.Api.Domain.Museum", b =>
                {
                    b.Navigation("Exhibitions");
                });

            modelBuilder.Entity("MuseumTickets.Api.Domain.TicketType", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
